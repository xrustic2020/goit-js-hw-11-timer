{"version":3,"sources":["webpack:///./index.js","webpack:///./scripts/CountdownTimer.js"],"names":["selector","targetDate","this","refs","day","document","querySelector","hour","min","sec","startTimer","setInterval","now","Date","time","getTime","updateUI","days","Math","floor","hours","mins","secs","textContent"],"mappings":"mIAIc,I,WCHZ,cAAsC,IAAxBA,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WACtBC,KAAKC,KAAO,CACVC,IAAKC,SAASC,cAAiBN,EAA1B,wBACLO,KAAMF,SAASC,cAAiBN,EAA1B,yBACNQ,IAAKH,SAASC,cAAiBN,EAA1B,wBACLS,IAAKJ,SAASC,cAAiBN,EAA1B,yBAEPE,KAAKD,WAAaA,E,2BAGpBS,WAAA,WAAa,WACXC,aAAY,WACV,IAAMC,EAAMC,KAAKD,MACXE,EAAO,EAAKb,WAAWc,UAAYH,EACzC,EAAKI,SAASF,KACb,M,EAGLG,KAAA,SAAKH,GACH,OAAOI,KAAKC,MAAML,EAAO,Q,EAG3BM,MAAA,SAAMN,GACJ,OAAOI,KAAKC,MAAOL,EAAO,MAAR,O,EAGpBO,KAAA,SAAKP,GACH,OAAOI,KAAKC,MAAOL,EAAO,KAAR,M,EAGpBQ,KAAA,SAAKR,GACH,OAAOI,KAAKC,MAAOL,EAAO,IAAe,M,EAG3CE,SAAA,SAASF,GACPZ,KAAKC,KAAKC,IAAImB,YAAcrB,KAAKe,KAAKH,GACtCZ,KAAKC,KAAKI,KAAKgB,YAAcrB,KAAKkB,MAAMN,GACxCZ,KAAKC,KAAKK,IAAIe,YAAcrB,KAAKmB,KAAKP,GACtCZ,KAAKC,KAAKM,IAAIc,YAAcrB,KAAKoB,KAAKR,I,KDnC5B,CAAmB,CAC/Bd,SAAU,WACVC,WAAY,IAAIY,KAAK,iBAGjBH,e","file":"main.72388586e08e9321afd6.js","sourcesContent":["import './styles.css';\nimport CountdownTimer from './scripts/CountdownTimer';\n\n\nconst sales = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Jan 1, 2021'),\n});\n\nsales.startTimer();","export default class CountdownTimer {\r\n  constructor({ selector, targetDate }) {\r\n    this.refs = {\r\n      day: document.querySelector(`${selector} [data-value=\"days\"]`),\r\n      hour: document.querySelector(`${selector} [data-value=\"hours\"]`),\r\n      min: document.querySelector(`${selector} [data-value=\"mins\"]`),\r\n      sec: document.querySelector(`${selector} [data-value=\"secs\"]`),\r\n    };\r\n    this.targetDate = targetDate;\r\n  }\r\n\r\n  startTimer() {\r\n    setInterval(() => {\r\n      const now = Date.now();\r\n      const time = this.targetDate.getTime() - now;\r\n      this.updateUI(time);\r\n    }, 1000);\r\n  }\r\n\r\n  days(time) {\r\n    return Math.floor(time / (1000 * 60 * 60 * 24));\r\n  }\r\n\r\n  hours(time) {\r\n    return Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n  }\r\n\r\n  mins(time) {\r\n    return Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n  }\r\n\r\n  secs(time) {\r\n    return Math.floor((time % (1000 * 60)) / 1000);\r\n  }\r\n\r\n  updateUI(time) {\r\n    this.refs.day.textContent = this.days(time);\r\n    this.refs.hour.textContent = this.hours(time);\r\n    this.refs.min.textContent = this.mins(time);\r\n    this.refs.sec.textContent = this.secs(time);\r\n  }\r\n}"],"sourceRoot":""}